@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="footer-links list-reset">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var roles = await UserManager.GetRolesAsync(user);

        if (roles.Contains("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="Dashboard">Admin Dashboard</a>
            </li>
        }
        else if (roles.Contains("User"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="User" asp-action="Dashboard">User Dashboard</a>
            </li>
        }
        <li>
            @* <a asp-controller="Account" asp-action="Profile" title="Manage">Hello, @(user.FullName != null ? @user.FullName : User.Identity?.Name!)</a> *@
            <a href="#" title="Manage">Hello, @(user.FullName != null ? @user.FullName : User.Identity?.Name!)</a>
        </li>
        <li>
            <form class="form-inline" asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li>
            <a asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li>
            <a asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
